<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd">
  <channel>
    <title>Charlie Harrington: Listen Laterz</title>
    <link>https://youtube.com/playlist?list=PLC_pWofH2gkvxyuQq51FpXjDAF0mxFEVw</link>
    <description>Charlie Harrington: Listen Laterz (2020-12-28 19:48:38 +0000 UTC)</description>
    <category>TV &amp; Film</category>
    <generator>Podsync generator (support us at https://github.com/mxpv/podsync)</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 Jan 2021 12:38:38 +0000</lastBuildDate>
    <pubDate>Mon, 28 Dec 2020 19:48:38 +0000</pubDate>
    <image>
      <url>https://i.ytimg.com/vi/P380D7yX8xQ/default.jpg</url>
      <title>Charlie Harrington: Listen Laterz</title>
      <link>https://youtube.com/playlist?list=PLC_pWofH2gkvxyuQq51FpXjDAF0mxFEVw</link>
    </image>
    <itunes:author>Charlie Harrington: Listen Laterz</itunes:author>
    <itunes:subtitle>Charlie Harrington: Listen Laterz</itunes:subtitle>
    <itunes:summary><![CDATA[Charlie Harrington: Listen Laterz (2020-12-28 19:48:38 +0000 UTC)]]></itunes:summary>
    <itunes:image href="https://i.ytimg.com/vi/P380D7yX8xQ/default.jpg"></itunes:image>
    <itunes:explicit>no</itunes:explicit>
    <itunes:category text="TV &amp; Film"></itunes:category>
    <item>
      <guid>pW-SOdj4Kkk</guid>
      <title>Jonathan Blow - Preventing the Collapse of Civilization (English only)</title>
      <link>https://youtube.com/watch?v=pW-SOdj4Kkk</link>
      <description>Jonathan&#39;s talk from DevGAMM 2019.&#xA;https://www.youtube.com/c/DevGAMMchannel</description>
      <pubDate>Fri, 22 Jan 2021 15:11:01 +0000</pubDate>
      <enclosure url="https://rockswhat.github.io/listener/listen_laterz/pW-SOdj4Kkk.mp3" length="29122629" type="audio/mpeg"></enclosure>
      <itunes:author>Charlie Harrington: Listen Laterz</itunes:author>
      <itunes:subtitle>Jonathan Blow - Preventing the Collapse of Civilization (English only)</itunes:subtitle>
      <itunes:summary><![CDATA[Jonathan's talk from DevGAMM 2019.
https://www.youtube.com/c/DevGAMMchannel]]></itunes:summary>
      <itunes:image href="https://i.ytimg.com/vi/pW-SOdj4Kkk/default.jpg"></itunes:image>
      <itunes:duration>1:04:41</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:order>1</itunes:order>
    </item>
    <item>
      <guid>9oS0eeI7YuQ</guid>
      <title>The Future of Web Programming - Jean Yang</title>
      <link>https://youtube.com/watch?v=9oS0eeI7YuQ</link>
      <description>Jean drops üî• about modern distributed systems vs. biological and chemical systems üå±,  why web programming today is like medicine in the middle ages ü©∏, how developers should demand more of their tooling and experience üõ†.&#xA;&#xA;References / transcript&#xA;https://gist.github.com/robot-dreams/58b28f40d8e7baf87eced36cffdfe591&#xA;&#xA;0:00 Intro&#xA;0:15 Jean&#39;s life story&#xA;3:56 Programming models&#xA;5:47 Top-down design vs. complex systems&#xA;8:34 Methodical programming techniques&#xA;10:50 Akita Software&#39;s use cases&#xA;12:00 API breaking changes&#xA;14:08 Using Akita to take snapshots of system behavior&#xA;16:41 Definition of API graph&#xA;17:44 Specific API example&#xA;20:02 Inferring higher-level properties&#xA;22:00 &#34;Programming Languages&#34; way of viewing the world&#xA;23:11 Watching traffic vs. instrumenting code&#xA;24:15 Possible capabilities in 5-10 years&#xA;26:57 Why is software quality unsexy?&#xA;29:37 Different approaches to software quality&#xA;33:00 Closing thoughts&#xA;35:31 Finding Jean / Akita Software on the internet</description>
      <pubDate>Thu, 21 Jan 2021 22:21:34 +0000</pubDate>
      <enclosure url="https://rockswhat.github.io/listener/listen_laterz/9oS0eeI7YuQ.mp3" length="20056062" type="audio/mpeg"></enclosure>
      <itunes:author>Charlie Harrington: Listen Laterz</itunes:author>
      <itunes:subtitle>The Future of Web Programming - Jean Yang</itunes:subtitle>
      <itunes:summary><![CDATA[Jean drops üî• about modern distributed systems vs. biological and chemical systems üå±,  why web programming today is like medicine in the middle ages ü©∏, how developers should demand more of their tooling and experience üõ†.

References / transcript
https://gist.github.com/robot-dreams/58b28f40d8e7baf87eced36cffdfe591

0:00 Intro
0:15 Jean's life story
3:56 Programming models
5:47 Top-down design vs. complex systems
8:34 Methodical programming techniques
10:50 Akita Software's use cases
12:00 API breaking changes
14:08 Using Akita to take snapshots of system behavior
16:41 Definition of API graph
17:44 Specific API example
20:02 Inferring higher-level properties
22:00 "Programming Languages" way of viewing the world
23:11 Watching traffic vs. instrumenting code
24:15 Possible capabilities in 5-10 years
26:57 Why is software quality unsexy?
29:37 Different approaches to software quality
33:00 Closing thoughts
35:31 Finding Jean / Akita Software on the internet]]></itunes:summary>
      <itunes:image href="https://i.ytimg.com/vi/9oS0eeI7YuQ/default.jpg"></itunes:image>
      <itunes:duration>36:26</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:order>2</itunes:order>
    </item>
    <item>
      <guid>Jp9pyMqnBzk</guid>
      <title>Inaugural poet Amanda Gorman delivers a poem at Joe Biden&#39;s inauguration</title>
      <link>https://youtube.com/watch?v=Jp9pyMqnBzk</link>
      <description>Inaugural poet Amanda Gorman, the Youth Poet Laureate of 2017, delivers a poem at President Joe Biden&#39;s inauguration. For access to live and exclusive video from CNBC subscribe to CNBC PRO: https://cnb.cx/2NGeIvi &#xA;&#xA;Amanda Gorman, 22, became the youngest inaugural poet in U.S. history after reciting her poem ‚ÄúThe Hill We Climb.‚Äù&#xA;&#xA;‚ÄúBut while democracy can be periodically delayed, it can never be permanently defeated,‚Äù Gorman read. ‚ÄúIn this truth, in this faith, we trust.‚Äù&#xA;&#xA;Gorman is the current United States Poet Laureate. At age 16, Gorman became the Youth Poet Laureate of Los Angeles and later became the first National Youth Poet Laureate in 2017 as a sociology student at Harvard.&#xA;&#xA;First Lady Jill Biden invited Gorman to participate in the inauguration in late December after hearing the poet at the Library of Congress.&#xA;&#xA;Gorman immediately made waves following her reading at the inaugural ceremony, becoming the top trending Google search topic in the U.S.&#xA;&#xA;Her words rang across the country: ‚ÄúA skinny Black girl descended from slaves and raised by a single mother can dream of becoming president, only to find herself reciting for one.‚Äù&#xA;&#xA;¬ª Subscribe to CNBC TV: https://cnb.cx/SubscribeCNBCtelevision&#xA;¬ª Subscribe to CNBC: https://cnb.cx/SubscribeCNBC&#xA;¬ª Subscribe to CNBC Classic: https://cnb.cx/SubscribeCNBCclassic&#xA;&#xA;Turn to CNBC TV for the latest stock market news and analysis. From market futures to live price updates CNBC is the leader in business news worldwide.&#xA;&#xA;The News with Shepard Smith is CNBC‚Äôs daily news podcast providing deep, non-partisan coverage and perspective on the day‚Äôs most important stories. Available to listen by 8:30pm ET / 5:30pm PT daily beginning September 30: https://www.cnbc.com/2020/09/29/the-news-with-shepard-smith-podcast.html?__source=youtube%7Cshepsmith%7Cpodcast &#xA; &#xA;Connect with CNBC News Online&#xA;Get the latest news: http://www.cnbc.com/&#xA;Follow CNBC on LinkedIn: https://cnb.cx/LinkedInCNBC&#xA;Follow CNBC News on Facebook: https://cnb.cx/LikeCNBC&#xA;Follow CNBC News on Twitter: https://cnb.cx/FollowCNBC&#xA;Follow CNBC News on Instagram: https://cnb.cx/InstagramCNBC&#xA;&#xA;https://www.cnbc.com/select/best-credit-cards/ &#xA;&#xA;#CNBC&#xA;#CNBCTV</description>
      <pubDate>Thu, 21 Jan 2021 16:29:25 +0000</pubDate>
      <enclosure url="https://rockswhat.github.io/listener/listen_laterz/Jp9pyMqnBzk.mp3" length="3832845" type="audio/mpeg"></enclosure>
      <itunes:author>Charlie Harrington: Listen Laterz</itunes:author>
      <itunes:subtitle>Inaugural poet Amanda Gorman delivers a poem at Joe Biden&#39;s inauguration</itunes:subtitle>
      <itunes:summary><![CDATA[Inaugural poet Amanda Gorman, the Youth Poet Laureate of 2017, delivers a poem at President Joe Biden's inauguration. For access to live and exclusive video from CNBC subscribe to CNBC PRO: https://cnb.cx/2NGeIvi 

Amanda Gorman, 22, became the youngest inaugural poet in U.S. history after reciting her poem ‚ÄúThe Hill We Climb.‚Äù

‚ÄúBut while democracy can be periodically delayed, it can never be permanently defeated,‚Äù Gorman read. ‚ÄúIn this truth, in this faith, we trust.‚Äù

Gorman is the current United States Poet Laureate. At age 16, Gorman became the Youth Poet Laureate of Los Angeles and later became the first National Youth Poet Laureate in 2017 as a sociology student at Harvard.

First Lady Jill Biden invited Gorman to participate in the inauguration in late December after hearing the poet at the Library of Congress.

Gorman immediately made waves following her reading at the inaugural ceremony, becoming the top trending Google search topic in the U.S.

Her words rang across the country: ‚ÄúA skinny Black girl descended from slaves and raised by a single mother can dream of becoming president, only to find herself reciting for one.‚Äù

¬ª Subscribe to CNBC TV: https://cnb.cx/SubscribeCNBCtelevision
¬ª Subscribe to CNBC: https://cnb.cx/SubscribeCNBC
¬ª Subscribe to CNBC Classic: https://cnb.cx/SubscribeCNBCclassic

Turn to CNBC TV for the latest stock market news and analysis. From market futures to live price updates CNBC is the leader in business news worldwide.

The News with Shepard Smith is CNBC‚Äôs daily news podcast providing deep, non-partisan coverage and perspective on the day‚Äôs most important stories. Available to listen by 8:30pm ET / 5:30pm PT daily beginning September 30: https://www.cnbc.com/2020/09/29/the-news-with-shepard-smith-podcast.html?__source=youtube%7Cshepsmith%7Cpodcast 
 
Connect with CNBC News Online
Get the latest news: http://www.cnbc.com/
Follow CNBC on LinkedIn: https://cnb.cx/LinkedInCNBC
Follow CNBC News on Facebook: https://cnb.cx/LikeCNBC
Follow CNBC News on Twitter: https://cnb.cx/FollowCNBC
Follow CNBC News on Instagram: https://cnb.cx/InstagramCNBC

https://www.cnbc.com/select/best-credit-cards/ 

#CNBC
#CNBCTV]]></itunes:summary>
      <itunes:image href="https://i.ytimg.com/vi/Jp9pyMqnBzk/default.jpg"></itunes:image>
      <itunes:duration>5:57</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:order>3</itunes:order>
    </item>
    <item>
      <guid>gbdqaDRhs84</guid>
      <title>No surprises    Radiohead cover ,</title>
      <link>https://youtube.com/watch?v=gbdqaDRhs84</link>
      <description>I was asked to do a cover of this and like most of my covers it isn&#39;t exactly right ,so if you are looking at how to play this great song i suggest you find any other cover than mine , to save you time ,apart from that i hope you like this version .&#xA;I HAVE UPLOADED THIS RECORDING TO SPOTIFY AND OTHER OUTLETS IT WILL TAKE A WEEK OR SO FROM TODAY 21/12.2020 &#xA;If you  really feel like donating ,i&#39;m fine either way&#xA;https://paypal.me/pools/campaign/115029046780536073&#xA;https://www.gofundme.com/f/frankmusic?utm_source=customer&amp;utm_medium=copy_link&amp;utm_campaign=p_cf+share-flow-&#xA;&#xA;Some of my Spotify songs from here &#xA;&#xA;https://distrokid.com/hyperfollow/frankwatkinson1/the-you-tube-demos&#xA;https://distrokid.com/hyperfollow/frankwatkinson/my-life-unplugged</description>
      <pubDate>Tue, 12 Jan 2021 06:30:17 +0000</pubDate>
      <enclosure url="https://rockswhat.github.io/listener/listen_laterz/gbdqaDRhs84.mp3" length="2230461" type="audio/mpeg"></enclosure>
      <itunes:author>Charlie Harrington: Listen Laterz</itunes:author>
      <itunes:subtitle>No surprises    Radiohead cover ,</itunes:subtitle>
      <itunes:summary><![CDATA[I was asked to do a cover of this and like most of my covers it isn't exactly right ,so if you are looking at how to play this great song i suggest you find any other cover than mine , to save you time ,apart from that i hope you like this version .
I HAVE UPLOADED THIS RECORDING TO SPOTIFY AND OTHER OUTLETS IT WILL TAKE A WEEK OR SO FROM TODAY 21/12.2020 
If you  really feel like donating ,i'm fine either way
https://paypal.me/pools/campaign/115029046780536073
https://www.gofundme.com/f/frankmusic?utm_source=customer&utm_medium=copy_link&utm_campaign=p_cf+share-flow-

Some of my Spotify songs from here 

https://distrokid.com/hyperfollow/frankwatkinson1/the-you-tube-demos
https://distrokid.com/hyperfollow/frankwatkinson/my-life-unplugged]]></itunes:summary>
      <itunes:image href="https://i.ytimg.com/vi/gbdqaDRhs84/default.jpg"></itunes:image>
      <itunes:duration>3:11</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:order>4</itunes:order>
    </item>
    <item>
      <guid>JjDsP5n2kSM</guid>
      <title>Jonathan Blow - How to program independent games -  CSUA Speech</title>
      <link>https://youtube.com/watch?v=JjDsP5n2kSM</link>
      <description>Jonathan Blow&#39;s speech at the UC Berkeley&#39;s Computer Science Undergraduate Association, in the same school he himself went, on April 1, 2011.&#xA;http://the-witness.net/news/ check it out if you&#39;re interested.</description>
      <pubDate>Mon, 11 Jan 2021 15:04:57 +0000</pubDate>
      <enclosure url="https://rockswhat.github.io/listener/listen_laterz/JjDsP5n2kSM.mp3" length="37607373" type="audio/mpeg"></enclosure>
      <itunes:author>Charlie Harrington: Listen Laterz</itunes:author>
      <itunes:subtitle>Jonathan Blow - How to program independent games -  CSUA Speech</itunes:subtitle>
      <itunes:summary><![CDATA[Jonathan Blow's speech at the UC Berkeley's Computer Science Undergraduate Association, in the same school he himself went, on April 1, 2011.
http://the-witness.net/news/ check it out if you're interested.]]></itunes:summary>
      <itunes:image href="https://i.ytimg.com/vi/JjDsP5n2kSM/default.jpg"></itunes:image>
      <itunes:duration>1:15:51</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:order>5</itunes:order>
    </item>
    <item>
      <guid>f84n5oFoZBc</guid>
      <title>Hammock Driven Development - Rich Hickey</title>
      <link>https://youtube.com/watch?v=f84n5oFoZBc</link>
      <description>Rich Hickey&#39;s second, &#34;philosophical&#34; talk at the first Clojure Conj, in Durham, North Carolina on October 23rd, 2010. &#xA;&#xA;Many thanks to Matt Courtney, who graciously provided the equipment and expertise that made this recording possible.</description>
      <pubDate>Mon, 11 Jan 2021 15:04:23 +0000</pubDate>
      <enclosure url="https://rockswhat.github.io/listener/listen_laterz/f84n5oFoZBc.mp3" length="19351221" type="audio/mpeg"></enclosure>
      <itunes:author>Charlie Harrington: Listen Laterz</itunes:author>
      <itunes:subtitle>Hammock Driven Development - Rich Hickey</itunes:subtitle>
      <itunes:summary><![CDATA[Rich Hickey's second, "philosophical" talk at the first Clojure Conj, in Durham, North Carolina on October 23rd, 2010. 

Many thanks to Matt Courtney, who graciously provided the equipment and expertise that made this recording possible.]]></itunes:summary>
      <itunes:image href="https://i.ytimg.com/vi/f84n5oFoZBc/default.jpg"></itunes:image>
      <itunes:duration>39:49</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:order>6</itunes:order>
    </item>
    <item>
      <guid>EY6q5dv_B-o</guid>
      <title>VCF East 2019 -- Brian Kernighan interviews Ken Thompson</title>
      <link>https://youtube.com/watch?v=EY6q5dv_B-o</link>
      <description>In the 1960s-1970s, Ken Thompson co-invented the UNIX operating system along with Dennis Ritchie at Bell Labs. He also worked on the language B, the operating system Plan 9, and the language Go. He and Ritchie won the Turing Award. He now works at Google. He‚Äôll be interviewed by Brian Kernighan of ‚ÄúK&amp;R‚Äù fame.&#xA;&#xA;This talk took place May 4, 2019. Videography courtesy of  @thegurumeditation (Facebook), @thegurumeditate (Twitter)&#xA;&#xA;Vintage Computer Federation: https://vcfed.org&#xA;VCF Discord: https://discord.gg/u4ybsBK&#xA;&#xA;0:00 Start of Video, Introductions and Updates&#xA;8:13 Start of Fireside Chat&#xA;11:02 How Ken got to Bell Labs&#xA;17:25 Origins of UNIX&#xA;22:40 Three weeks away from an OS&#xA;29:27 The PDP-11&#xA;32:48 Pipes&#xA;35:42 GREP&#xA;38:40 Languages and Evolution&#xA;46:25 Chess Computers&#xA;1:02:40 End of Chat</description>
      <pubDate>Sat, 09 Jan 2021 15:37:16 +0000</pubDate>
      <enclosure url="https://rockswhat.github.io/listener/listen_laterz/EY6q5dv_B-o.mp3" length="36893997" type="audio/mpeg"></enclosure>
      <itunes:author>Charlie Harrington: Listen Laterz</itunes:author>
      <itunes:subtitle>VCF East 2019 -- Brian Kernighan interviews Ken Thompson</itunes:subtitle>
      <itunes:summary><![CDATA[In the 1960s-1970s, Ken Thompson co-invented the UNIX operating system along with Dennis Ritchie at Bell Labs. He also worked on the language B, the operating system Plan 9, and the language Go. He and Ritchie won the Turing Award. He now works at Google. He‚Äôll be interviewed by Brian Kernighan of ‚ÄúK&R‚Äù fame.

This talk took place May 4, 2019. Videography courtesy of  @thegurumeditation (Facebook), @thegurumeditate (Twitter)

Vintage Computer Federation: https://vcfed.org
VCF Discord: https://discord.gg/u4ybsBK

0:00 Start of Video, Introductions and Updates
8:13 Start of Fireside Chat
11:02 How Ken got to Bell Labs
17:25 Origins of UNIX
22:40 Three weeks away from an OS
29:27 The PDP-11
32:48 Pipes
35:42 GREP
38:40 Languages and Evolution
46:25 Chess Computers
1:02:40 End of Chat]]></itunes:summary>
      <itunes:image href="https://i.ytimg.com/vi/EY6q5dv_B-o/default.jpg"></itunes:image>
      <itunes:duration>1:03:51</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:order>7</itunes:order>
    </item>
    <item>
      <guid>vvZA9n3e5pc</guid>
      <title>Stanford Seminar - The Soul of a New Machine: Rethinking the Computer</title>
      <link>https://youtube.com/watch?v=vvZA9n3e5pc</link>
      <description>Bryan Cantrill&#xA;Oxide Computer Company&#xA;&#xA;February 26, 2020&#xA;While our software systems have become increasingly elastic, the physical substrate available to run that software (that is, the computer!) has remained stuck in a bygone era of PC architecture. Hyperscale infrastructure providers have long since figured this out, building machines that are fit to purpose -- but those advances have been denied to the mass market. In this talk, we will talk about our vision for a new, rack-scale, server-side machine -- and how we anticipate advances like open firmware, RISC-V, and Rust will play a central role in realizing that vision.&#xA;&#xA;View the full playlist: https://www.youtube.com/playlist?list=PLoROMvodv4rMWw6rRoeSpkiseTHzWj6vu</description>
      <pubDate>Wed, 06 Jan 2021 16:06:50 +0000</pubDate>
      <enclosure url="https://rockswhat.github.io/listener/listen_laterz/vvZA9n3e5pc.mp3" length="52038549" type="audio/mpeg"></enclosure>
      <itunes:author>Charlie Harrington: Listen Laterz</itunes:author>
      <itunes:subtitle>Stanford Seminar - The Soul of a New Machine: Rethinking the Computer</itunes:subtitle>
      <itunes:summary><![CDATA[Bryan Cantrill
Oxide Computer Company

February 26, 2020
While our software systems have become increasingly elastic, the physical substrate available to run that software (that is, the computer!) has remained stuck in a bygone era of PC architecture. Hyperscale infrastructure providers have long since figured this out, building machines that are fit to purpose -- but those advances have been denied to the mass market. In this talk, we will talk about our vision for a new, rack-scale, server-side machine -- and how we anticipate advances like open firmware, RISC-V, and Rust will play a central role in realizing that vision.

View the full playlist: https://www.youtube.com/playlist?list=PLoROMvodv4rMWw6rRoeSpkiseTHzWj6vu]]></itunes:summary>
      <itunes:image href="https://i.ytimg.com/vi/vvZA9n3e5pc/default.jpg"></itunes:image>
      <itunes:duration>1:26:02</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:order>8</itunes:order>
    </item>
    <item>
      <guid>ji5_MqicxSo</guid>
      <title>Randy Pausch Last Lecture: Achieving Your Childhood Dreams</title>
      <link>https://youtube.com/watch?v=ji5_MqicxSo</link>
      <description>Carnegie Mellon Professor Randy Pausch (Oct. 23, 1960 - July 25, 2008) gave his last lecture at the university Sept. 18, 2007, before a packed McConomy Auditorium. In his moving presentation, &#34;Really Achieving Your Childhood Dreams,&#34; Pausch talked about his lessons learned and gave advice to students on how to achieve their own career and personal goals. &#xD;&#xA;&#xD;&#xA;For more on Randy, visit: http://www.cmu.edu/randyslecture&#xD;&#xA;&#xD;&#xA;Learn how to support the Randy Pausch Memorial Bridge, visit: http://www.cmu.edu/homepage/images/extras/emails/pausch/pausch_bridge.html</description>
      <pubDate>Wed, 06 Jan 2021 06:21:09 +0000</pubDate>
      <enclosure url="https://rockswhat.github.io/listener/listen_laterz/ji5_MqicxSo.mp3" length="44219421" type="audio/mpeg"></enclosure>
      <itunes:author>Charlie Harrington: Listen Laterz</itunes:author>
      <itunes:subtitle>Randy Pausch Last Lecture: Achieving Your Childhood Dreams</itunes:subtitle>
      <itunes:summary><![CDATA[Carnegie Mellon Professor Randy Pausch (Oct. 23, 1960 - July 25, 2008) gave his last lecture at the university Sept. 18, 2007, before a packed McConomy Auditorium. In his moving presentation, "Really Achieving Your Childhood Dreams," Pausch talked about his lessons learned and gave advice to students on how to achieve their own career and personal goals. 

For more on Randy, visit: http://www.cmu.edu/randyslecture

Learn how to support the Randy Pausch Memorial Bridge, visit: http://www.cmu.edu/homepage/images/extras/emails/pausch/pausch_bridge.html]]></itunes:summary>
      <itunes:image href="https://i.ytimg.com/vi/ji5_MqicxSo/default.jpg"></itunes:image>
      <itunes:duration>1:16:27</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:order>9</itunes:order>
    </item>
    <item>
      <guid>Ud8WRAdihPg</guid>
      <title>Alan Kay on Learning and Computer Science</title>
      <link>https://youtube.com/watch?v=Ud8WRAdihPg</link>
      <description>Berkeley&#39;s Computer Science 61A - The Structure and Interpretation of Computer Programs course. For all videos in this course, see&#xD;&#xA;&#xD;&#xA;http://webcast.berkeley.edu/course_details_new.php?seriesid=2008-D-26263&amp;semesterid=2008-D</description>
      <pubDate>Wed, 06 Jan 2021 06:15:33 +0000</pubDate>
      <enclosure url="https://rockswhat.github.io/listener/listen_laterz/Ud8WRAdihPg.mp3" length="3622989" type="audio/mpeg"></enclosure>
      <itunes:author>Charlie Harrington: Listen Laterz</itunes:author>
      <itunes:subtitle>Alan Kay on Learning and Computer Science</itunes:subtitle>
      <itunes:summary><![CDATA[Berkeley's Computer Science 61A - The Structure and Interpretation of Computer Programs course. For all videos in this course, see

http://webcast.berkeley.edu/course_details_new.php?seriesid=2008-D-26263&semesterid=2008-D]]></itunes:summary>
      <itunes:image href="https://i.ytimg.com/vi/Ud8WRAdihPg/default.jpg"></itunes:image>
      <itunes:duration>8:42</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:order>10</itunes:order>
    </item>
    <item>
      <guid>a1zDuOPkMSw</guid>
      <title>Hamming, &#34;You and Your Research&#34; (June 6, 1995)</title>
      <link>https://youtube.com/watch?v=a1zDuOPkMSw</link>
      <description>Intro: I have given a talk with this title many times, and it turns out from discussions after the talk I could have just as well have called it &#34;You and Your Engineering Career,&#34; or even &#34;You and Your Career.&#34; But I left the word &#34;Research&#34; in the title because that is what I have most studied. From the previous chapters you have an adequate background for how I made the study, and I need not mention again the names of the famous people I have studied closely. The earlier chapters are, in sense, just a great expansion, with much more detail, of the original talk. This chapter is, in a sense, a summary of the previous chapters.&#xA;&#xA;&#xA;&#xA;The Art of Doing Science and Engineering: Learning to Learn&#34; was the capstone course by Dr. Richard W. Hamming (1915-1998) for graduate students at the Naval Postgraduate School (NPS) in Monterey California. &#xA;&#xA;This course is intended to instill a &#34;style of thinking&#34; that will enhance one&#39;s ability to function as a problem solver of complex technical issues. With respect, students sometimes called the course &#34;Hamming on Hamming&#34; because he relates many research collaborations, discoveries, inventions and achievements of his own. This collection of stories and carefully distilled insights relates how those discoveries came about. Most importantly, these presentations provide objective analysis about the thought processes and reasoning that took place as Dr. Hamming, his associates and other major thinkers, in computer science and electronics, progressed through the grand challenges of science and engineering in the twentieth century.</description>
      <pubDate>Wed, 06 Jan 2021 05:50:07 +0000</pubDate>
      <enclosure url="https://rockswhat.github.io/listener/listen_laterz/a1zDuOPkMSw.mp3" length="25044093" type="audio/mpeg"></enclosure>
      <itunes:author>Charlie Harrington: Listen Laterz</itunes:author>
      <itunes:subtitle>Hamming, &#34;You and Your Research&#34; (June 6, 1995)</itunes:subtitle>
      <itunes:summary><![CDATA[Intro: I have given a talk with this title many times, and it turns out from discussions after the talk I could have just as well have called it "You and Your Engineering Career," or even "You and Your Career." But I left the word "Research" in the title because that is what I have most studied. From the previous chapters you have an adequate background for how I made the study, and I need not mention again the names of the famous people I have studied closely. The earlier chapters are, in sense, just a great expansion, with much more detail, of the original talk. This chapter is, in a sense, a summary of the previous chapters.



The Art of Doing Science and Engineering: Learning to Learn" was the capstone course by Dr. Richard W. Hamming (1915-1998) for graduate students at the Naval Postgraduate School (NPS) in Monterey California. 

This course is intended to instill a "style of thinking" that will enhance one's ability to function as a problem solver of complex technical issues. With respect, students sometimes called the course "Hamming on Hamming" because he relates many research collaborations, discoveries, inventions and achievements of his own. This collection of stories and carefully distilled insights relates how those discoveries came about. Most importantly, these presentations provide objective analysis about the thought processes and reasoning that took place as Dr. Hamming, his associates and other major thinkers, in computer science and electronics, progressed through the grand challenges of science and engineering in the twentieth century.]]></itunes:summary>
      <itunes:image href="https://i.ytimg.com/vi/a1zDuOPkMSw/default.jpg"></itunes:image>
      <itunes:duration>44:03</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:order>11</itunes:order>
    </item>
    <item>
      <guid>d_yxhNGsJU8</guid>
      <title>What is web assembly?</title>
      <link>https://youtube.com/watch?v=d_yxhNGsJU8</link>
      <description>Today web programming is limited to JavaScript. Tomorrow we‚Äôll probably see something different. Web assembly aims to break JavaScript‚Äôs monopoly on the browser using an old-fashioned approach. Rather than using a single interpreted language (JavaScript), web programs could be written in any language and then compiled down into (web) assembly code that would run in the browser. In the future, it‚Äôs unlikely that JavaScript will maintain its hold on frontend web development. But it had a great run.&#xA;&#xA;Credits: Talking: Geoffrey Challen (Assistant Professor, Computer Science and Engineering, University at Buffalo). Producing: Greg Bunyea (Undergraduate, Computer Science and Engineering, University at Buffalo).&#xA;&#xA;Part of the https://www.internet-class.org online internet course. A blue Systems Research Group (https://www.bluegroup.systems) production.</description>
      <pubDate>Wed, 06 Jan 2021 05:00:24 +0000</pubDate>
      <enclosure url="https://rockswhat.github.io/listener/listen_laterz/d_yxhNGsJU8.mp3" length="3122781" type="audio/mpeg"></enclosure>
      <itunes:author>Charlie Harrington: Listen Laterz</itunes:author>
      <itunes:subtitle>What is web assembly?</itunes:subtitle>
      <itunes:summary><![CDATA[Today web programming is limited to JavaScript. Tomorrow we‚Äôll probably see something different. Web assembly aims to break JavaScript‚Äôs monopoly on the browser using an old-fashioned approach. Rather than using a single interpreted language (JavaScript), web programs could be written in any language and then compiled down into (web) assembly code that would run in the browser. In the future, it‚Äôs unlikely that JavaScript will maintain its hold on frontend web development. But it had a great run.

Credits: Talking: Geoffrey Challen (Assistant Professor, Computer Science and Engineering, University at Buffalo). Producing: Greg Bunyea (Undergraduate, Computer Science and Engineering, University at Buffalo).

Part of the https://www.internet-class.org online internet course. A blue Systems Research Group (https://www.bluegroup.systems) production.]]></itunes:summary>
      <itunes:image href="https://i.ytimg.com/vi/d_yxhNGsJU8/default.jpg"></itunes:image>
      <itunes:duration>5:18</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:order>12</itunes:order>
    </item>
    <item>
      <guid>P380D7yX8xQ</guid>
      <title>Why discuss the internet?</title>
      <link>https://youtube.com/watch?v=P380D7yX8xQ</link>
      <description>Why discuss the internet?&#xA;The internet is the transformative technology of our age. It defines the era that we live in. And if you are a computer scientist, it represents the crowning achievement of your field and the platform that will deliver most of your new great ideas. Discussing the internet allows us to survey some of the best contributions of computer science, learn powerful design principles, and understand the world around us. Discussing the internet also allows us to consider how it is changing us, and dream about how we can use it to change our world.&#xA;&#xA;Credits: Talking: Geoffrey Challen (Assistant Professor, Computer Science and Engineering, University at Buffalo). Producing: Greg Bunyea (Undergraduate, Computer Science and Engineering, University at Buffalo).&#xA;&#xA;Part of the https://www.internet-class.org online internet course. A blue Systems Research Group (https://blue.cse.buffalo.edu) production.</description>
      <pubDate>Wed, 06 Jan 2021 03:54:55 +0000</pubDate>
      <enclosure url="https://rockswhat.github.io/listener/listen_laterz/P380D7yX8xQ.mp3" length="3261693" type="audio/mpeg"></enclosure>
      <itunes:author>Charlie Harrington: Listen Laterz</itunes:author>
      <itunes:subtitle>Why discuss the internet?</itunes:subtitle>
      <itunes:summary><![CDATA[Why discuss the internet?
The internet is the transformative technology of our age. It defines the era that we live in. And if you are a computer scientist, it represents the crowning achievement of your field and the platform that will deliver most of your new great ideas. Discussing the internet allows us to survey some of the best contributions of computer science, learn powerful design principles, and understand the world around us. Discussing the internet also allows us to consider how it is changing us, and dream about how we can use it to change our world.

Credits: Talking: Geoffrey Challen (Assistant Professor, Computer Science and Engineering, University at Buffalo). Producing: Greg Bunyea (Undergraduate, Computer Science and Engineering, University at Buffalo).

Part of the https://www.internet-class.org online internet course. A blue Systems Research Group (https://blue.cse.buffalo.edu) production.]]></itunes:summary>
      <itunes:image href="https://i.ytimg.com/vi/P380D7yX8xQ/default.jpg"></itunes:image>
      <itunes:duration>5:22</itunes:duration>
      <itunes:explicit>no</itunes:explicit>
      <itunes:order>13</itunes:order>
    </item>
  </channel>
</rss>